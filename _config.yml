# Welcome to Jekyll 4.0!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely edit after that. If you find
# yourself editing this file very often, consider using Jekyll's data files
# feature for the data you need to update frequently.
#
# For technical reasons, this file is *NOT* reloaded automatically when you use
# 'bundle exec jekyll serve'. If you change this file, please restart the server process.
#
# If you need help with YAML syntax, here are some quick references for you:
# https://learn-the-web.algonquindesign.ca/topics/markdown-yaml-cheat-sheet/#yaml
# https://learnxinyminutes.com/docs/yaml/
#
# Site settings
# These are used to personalize your new site. If you look in the HTML files,
# you will see them accessed via {{ site.title }}, {{ site.email }}, and so on.
# You can create any custom variable you would like, and they will be accessible
# in the templates via {{ site.myvariable }}.

baseurl: "/" # the subpath of your site, e.g. /blog /galacticsociety.github.io
url: "https://www.sharpetronics.com" # the base hostname & protocol for your site, GitHub example: https://sharpetronics.github.io
source: .

#Latent Semantic Indexing for similarity bewtween documents.
lsi: true

# Strapi dashboard integration
strapi:
    # Your API endpoint (optional, default to http://localhost:1337)
    endpoint: https://dash.sharpetronics.com
    # Collections, key is used to access in the strapi.collections
    # template variable
    collections:
        # Example for a "posts" collection
        posts:
            # Collection name (optional). Used to construct the url requested. Example: type `foo` would generate the following url `http://localhost:1337/foo`.
            type: post
            # Permalink used to generate the output files (eg. /posts/:id).
            permalink: /blog/:slug/

# Collection configurations
# These collections will enable to sort types of products and loop through that
# type to be displayed on a page. As an example, I have 10 "3D" items, all 10 items
# will be displayed when a category is selected on the product main index page.
collections_dir: collections

collections:
  products:
    output: true
    permalink: /products/:path/
  legal:
    output: true
    permalink: /legal/:path/

permalink: "/blog/:categories/:year/:month/:day/:title/" #Built in options include: date, pretty, ordinal, weekdate, none; learn more here: https://jekyllrb.com/docs/permalinks/
#paginate: 7
#paginate_path: "/journal/"

# Responsive images conversion; requires imageMagik
# Test with convert --version SEE: docker-compose.yml for docker container setup.
# Currently not being used
picture:
  source: "assets/images"
  output: "assets/images/generated"
  suppress_warnings: true

# Build settings
plugins:
  - jekyll-feed #manually generated rss.xml https://jekyllrb.com/tutorials/convert-site-to-jekyll/#10-rss-feed
  - jekyll-admin
  - jekyll-strapi
  - jekyll-menus
  - jekyll-archives
  - jekyll-paginate-v2
  - jekyll/tagging

sass:
  style: compressed # possible values: nested expanded compact compressed
  sass_dir: _scss

############################################################
# Site configuration for the Jekyll 3 Pagination Gem
# The values here represent the defaults if nothing is set
pagination:

  # Site-wide kill switch, disabled here it doesn't run at all
  enabled: true

  # Set to 'true' to enable pagination debugging. This can be enabled in the site config or only for individual pagination pages
  debug: true

  # The default document collection to paginate if nothing is specified ('posts' is default)
  collection: 'posts'

  # How many objects per paginated page, used to be `paginate` (default: 0, means all)
  per_page: 11

  # The permalink structure for the paginated pages (this can be any level deep)
  permalink: '/:num/' # Pages are index.html inside this folder (default)
  #permalink: '/page/:num.html' # Pages are simple html files
  #permalink: '/page/:num' # Pages are html files, linked jekyll extensionless permalink style.

  # Optional the title format for the paginated pages (supports :title for original page title, :num for pagination page number, :max for total number of pages)
  title: ':title - page :num'

  # Limit how many pagenated pages to create (default: 0, means all)
  limit: 0

  # Optional, defines the field that the posts should be sorted on (omit to default to 'date')
  sort_field: 'date'

  # Optional, sorts the posts in reverse order (omit to default decending or sort_reverse: true)
  sort_reverse: true

  # Optional, the default category to use, omit or just leave this as 'posts' to get a backwards-compatible behavior (all posts)
  category: 'posts'

  # Optional, the default tag to use, omit to disable
  tag: ''

  # Optional, the default locale to use, omit to disable (depends on a field 'locale' to be specified in the posts,
  # in reality this can be any value, suggested are the Microsoft locale-codes (e.g. en_US, en_GB) or simply the ISO-639 language code )
  locale: ''

 # Optional,omit or set both before and after to zero to disable.
 # Controls how the pagination trail for the paginated pages look like.
  trail:
    before: 3
    after: 1

  # Optional, the default file extension for generated pages (e.g html, json, xml).
  # Internally this is set to html by default
  extension: html

  # Optional, the default name of the index file for generated pages (e.g. 'index.html')
  # Without file extension
  indexpage: 'index'

############################################################

# Exclude from processing.
# The following items will not be processed, by default.
# Any item listed under the `exclude:` key here will be automatically added to
# the internal "default list".
#
# Excluded items can be processed by explicitly listing the directories or
# their entries' file path in the `include:` list.

  exclude:
#   - .sass-cache/
#   - .jekyll-cache/
#   - gemfiles/
#   - Gemfile
#   - Gemfile.lock
#   - node_modules/
#   - vendor/bundle/
#   - vendor/cache/
#   - vendor/gems/
#   - vendor/ruby/

# Reading extra files
# Every file or directory beginning with the following characters: ., _ , # or ~
# in the source directory will not be included in the destination folder. Such
# paths will have to be explicitly specified via the config file in the include
# directive to make sure theyâ€™re copied over:
#

  include:
#   - _pages
